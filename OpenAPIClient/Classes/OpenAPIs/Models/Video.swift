//
// Video.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct Video: Codable {

    public var id: Int?
    public var uuid: UUID?
    public var isLive: Bool?
    public var createdAt: Date?
    public var publishedAt: Date?
    public var updatedAt: Date?
    public var originallyPublishedAt: Date?
    public var category: VideoConstantNumber?
    public var licence: VideoConstantNumber?
    public var language: VideoConstantString?
    public var privacy: VideoPrivacyConstant?
    public var description: String?
    public var duration: Int?
    public var isLocal: Bool?
    public var name: String?
    public var thumbnailPath: String?
    public var previewPath: String?
    public var embedPath: String?
    public var views: Int?
    public var likes: Int?
    public var dislikes: Int?
    public var nsfw: Bool?
    public var waitTranscoding: Bool?
    public var state: VideoStateConstant?
    public var scheduledUpdate: VideoScheduledUpdate?
    public var blacklisted: Bool?
    public var blacklistedReason: String?
    public var account: AccountSummary?
    public var channel: VideoChannelSummary?
    public var userHistory: VideoUserHistory?

    public init(id: Int? = nil, uuid: UUID? = nil, isLive: Bool? = nil, createdAt: Date? = nil, publishedAt: Date? = nil, updatedAt: Date? = nil, originallyPublishedAt: Date? = nil, category: VideoConstantNumber? = nil, licence: VideoConstantNumber? = nil, language: VideoConstantString? = nil, privacy: VideoPrivacyConstant? = nil, description: String? = nil, duration: Int? = nil, isLocal: Bool? = nil, name: String? = nil, thumbnailPath: String? = nil, previewPath: String? = nil, embedPath: String? = nil, views: Int? = nil, likes: Int? = nil, dislikes: Int? = nil, nsfw: Bool? = nil, waitTranscoding: Bool? = nil, state: VideoStateConstant? = nil, scheduledUpdate: VideoScheduledUpdate? = nil, blacklisted: Bool? = nil, blacklistedReason: String? = nil, account: AccountSummary? = nil, channel: VideoChannelSummary? = nil, userHistory: VideoUserHistory? = nil) {
        self.id = id
        self.uuid = uuid
        self.isLive = isLive
        self.createdAt = createdAt
        self.publishedAt = publishedAt
        self.updatedAt = updatedAt
        self.originallyPublishedAt = originallyPublishedAt
        self.category = category
        self.licence = licence
        self.language = language
        self.privacy = privacy
        self.description = description
        self.duration = duration
        self.isLocal = isLocal
        self.name = name
        self.thumbnailPath = thumbnailPath
        self.previewPath = previewPath
        self.embedPath = embedPath
        self.views = views
        self.likes = likes
        self.dislikes = dislikes
        self.nsfw = nsfw
        self.waitTranscoding = waitTranscoding
        self.state = state
        self.scheduledUpdate = scheduledUpdate
        self.blacklisted = blacklisted
        self.blacklistedReason = blacklistedReason
        self.account = account
        self.channel = channel
        self.userHistory = userHistory
    }

}
